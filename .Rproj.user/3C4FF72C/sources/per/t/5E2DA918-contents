---
title: "2024-05-28-Fit models"
author: "Yingxin Xu"
date: "2024-05-28"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Load packages
```{r}
pacman::p_load(readxl, regclass, car, vip, tidymodels, lme4, showtext, gghighlight, ggpubr, 
               patchwork, ggrepel, gglm, multilevelmod, knitr)
```

# Load data
```{r}
gene_path = paste(here::here(), "/raw-data/2024-03-04-WIF-tis4d.xlsx", sep = "")
gene_fl <- read_excel(gene_path, sheet = 1, na = "NA")
```

# Clean data
```{r}
gene_fl <-
  gene_fl |>
  mutate(
    treatment = case_when(
      treatment == "placebo" ~ "Placebo",
      treatment == "activating factor 42" ~ "Activating factor 42",
      TRUE ~ treatment
    )
  )

gene_fl <-
  gene_fl |>
  mutate(
    cell_line = case_when(
      cell_line == "CELL-TYPE 101" ~ "Cell-type 101",
      cell_line == "WILD-TYPE" ~ "Wild-type",
      TRUE ~ cell_line
    )
  )

gene_fl <-
  gene_fl |>
  mutate(
    name = case_when(
      name == "GL-cDZ" ~ "GL-CDZ",
      name == "Gl-Cwn" ~ "GL-CWN",
      name == "GL-cwN" ~ "GL-CWN",
      name == "GL-kYH" ~ "GL-KYH",
      name == "Gl-Rjs" ~ "GL-RJS",
      name == "GL-rjS" ~ "GL-RJS",
      name == "Gl-Xib" ~ "GL-XIB",
      name == "GL-XIb" ~ "GL-XIB",
      name == "GL-Xik" ~ "GL-XIK",
      name == "Gl-Zhw" ~ "GL-ZHW",
      name == "GL-ZHw" ~ "GL-ZHW",
      TRUE ~ name
    )
  )

gene_fl <- na.omit(gene_fl)

colnames(gene_fl)[2] <- "Treatment"

```

# Fit models
```{r}
# linear model without interaction term
gene_lm1 <- lm(gene_expression ~ Treatment + conc + cell_line + name, data = gene_fl)
# linear model with interaction term
gene_lm2 <- lm(gene_expression ~ Treatment * conc + cell_line + name, data = gene_fl)

# linear mixed-effect model
# without interaction term
gene_lmm1 <- lmer(gene_expression ~ Treatment + conc + cell_line + (1|name), data = gene_fl)
# with interaction term
gene_lmm2 <- lmer(gene_expression ~ Treatment * conc + cell_line + (1|name), data = gene_fl)
```

# Compare model performance
## Compare linear models
```{r}
anova(gene_lm1, gene_lm2)
```
The p-value is smaller than 0.05, so it's necessary to include the interaction term.

## Compare linear mixed-effect models
```{r}
anova(gene_lmm1, gene_lmm2)
```
Similarly, it's necessary to keep the interaction term.

## Compare linear model and linear mixed-effect model

Previous comparison shows that the interaction term is necessary, so we only need to compare `gene_lm2` and `gene_lmm2`
```{r}
# Compare models with interaction term
# AIC
aic_model1 <- AIC(gene_lm2)
aic_model2 <- AIC(gene_lmm2)

# BIC
bic_model1 <- BIC(gene_lm2)
bic_model2 <- BIC(gene_lmm2)

comparison <- data.frame(
  Model = c("gene_lm2", "gene_lmm2"),
  AIC = c(aic_model1, aic_model2),
  BIC = c(bic_model1, bic_model2)
)

kable(comparison, caption = "Comparison of AIC and BIC values for LM and LMM")

# save table

write.csv(comparison, here::here("tabs/model_aicbic.csv"), row.names = FALSE)

```

```{r}
# Diagnostic plots
# Linear model
gglm(gene_lm2)

# Linear mixed-effect model
# Residual vs fitted
plot(gene_lmm2, xlab="Fitted values", ylab = "Residuals", main="Residual vs Fitted")
# qqplot
qqnorm(residuals(gene_lmm2))
# Residual vs leverage
ggplot(
  data.frame(
    lev = hatvalues(gene_lmm2),
    pearson = residuals(gene_lmm2, type = "pearson")),
  aes(x = lev, y = pearson)) +
  labs(x = "Leverage", y="Standardized Residuals", title= "Residual vs Leverage")+
  geom_point() +
  geom_smooth()+
  theme_bw()

# All plots have been saved into 'figs' folder. 
```

Model selection and discussion: see README file or IMRaD report.
