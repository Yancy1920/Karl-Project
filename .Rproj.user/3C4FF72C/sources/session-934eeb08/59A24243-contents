---
title: "2024-04-01-Figure"
author: "Yingxin Xu"
date: "2024-04-01"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Load packages
```{r}
pacman::p_load(readxl, regclass, car, vip, tidymodels, lme4, showtext, gghighlight, ggpubr, patchwork, ggrepel, gglm, multilevelmod, knitr, cowplot)
```

# Load and clean data
```{r}
# Load data
gene_path = paste(here::here(), "/raw-data/2024-03-04-WIF-tis4d.xlsx", sep = "")
gene_fl <- read_excel(gene_path, sheet = 1, na = "NA")
```

```{r}
# Clean data
# Standardize some column names and variable names
gene_fl <-
  gene_fl |>
  mutate(
    treatment = case_when(
      treatment == "placebo" ~ "Placebo",
      treatment == "activating factor 42" ~ "Activating factor 42",
      TRUE ~ treatment
    )
  )
gene_fl <-
  gene_fl |>
  mutate(
    cell_line= case_when(
      cell_line == "CELL-TYPE 101" ~ "Cell-type 101",
      cell_line == "WILD-TYPE" ~ "Wild-type",
      TRUE ~ cell_line
    )
  )

gene_fl <-
  gene_fl |>
  mutate(
    name = case_when(
      name == "GL-cDZ" ~ "GL-CDZ",
      name == "Gl-Cwn" ~ "GL-CWN",
      name == "GL-cwN" ~ "GL-CWN",
      name == "GL-kYH" ~ "GL-KYH",
      name == "Gl-Rjs" ~ "GL-RJS",
      name == "GL-rjS" ~ "GL-RJS",
      name == "Gl-Xib" ~ "GL-XIB",
      name == "GL-XIb" ~ "GL-XIB",
      name == "GL-Xik" ~ "GL-XIK",
      name == "Gl-Zhw" ~ "GL-ZHW",
      name == "GL-ZHw" ~ "GL-ZHW",
      TRUE ~ name
    )
  )

colnames(gene_fl)[2] <- "Treatment"
# delete NA terms
gene_fl <- na.omit(gene_fl)
```


# Produce figure
```{r,warning=FALSE}
## Add font
font_add(family = "times",
         regular = here::here("font/Times New Roman.ttf"))  # To add this font, you need to include file "Times New Roman.ttf" in the path here::here(), I've included this in this R project folder.

set_geom_fonts <- function(family = NULL, ggrepel = FALSE) {
  if (is.null(family)) {
    family <- ggplot2::theme_get()$text$family
  }
  
  update_geom_defaults("text", list(family = family))
  update_geom_defaults("label", list(family = family))
  
  # Optional defaults for the ggrepel geoms
  if (ggrepel) {
    update_geom_defaults(ggrepel::GeomTextRepel, list(family = family))
    update_geom_defaults(ggrepel::GeomLabelRepel, list(family = family))
  }
}

showtext_auto() # Use this command to set font in following plots.

# Sperate the dataset based on cell line type
gene_fl_A <- gene_fl[which(gene_fl$cell_line == "Wild-type"), ]
gene_fl_B <- gene_fl[which(gene_fl$cell_line == "Cell-type 101"), ]

# set label for two plots
label_data_A <- c(rep(NA, 20), "XIB", "CDZ", rep(NA, 20), "RJS", "XIK")
label_data_B <- c(rep(NA, 20), "CWN", "KYH", rep(NA, 20), "ZHW", "MFA")

# The first plot
pA <- gene_fl_A |>
  ggplot(aes(x = conc, y = gene_expression, fill = Treatment)) +
  scale_fill_manual(values = c("#78A8D1", "#D5BF98")) +
  geom_point(colour = "black", size = 3, shape = 21, stroke = 0.5) +
  labs(x = expression(paste(mu, "g/ml")), y = "Gene Expression") +
  ggtitle("Wild-type") +
  geom_label_repel(label = label_data_A, nudge_x = 1, nudge_y = 0, size = 20, show.legend = FALSE) +
  scale_x_continuous(limits = c(0, 11), breaks = seq(0, 10, 1)) +
  theme_bw() +
  scale_shape_manual() +
  set_geom_fonts(family = "times", ggrepel = TRUE) +
  theme(text = element_text(family = "times", size = 65))

# The second plot
pB <- gene_fl_B |>
  ggplot(aes(x = conc, y = gene_expression, fill = Treatment)) +
  scale_fill_manual(values = c("#78A8D1", "#D5BF98")) +
  geom_point(colour = "black", size = 3, shape = 21, stroke = 0.5) +
  labs(x = expression(paste(mu, "g/ml")), y = "Gene Expression") +
  ggtitle("Cell-type 101") +
  geom_label_repel(label = label_data_B, nudge_x = 1, nudge_y = 0, size = 20, show.legend = FALSE) +
  scale_x_continuous(limits = c(0, 11), breaks = seq(0, 10, 1)) +
  theme_bw() +
  scale_shape_manual() +
  set_geom_fonts(family = "times", ggrepel = TRUE) +
  theme(text = element_text(family = "times", size = 65))

# Place the two images side by side and label them.
p <- pA+pB+
  plot_annotation(tag_levels = "A")+
  plot_layout(guides = "collect")&
  theme(legend.position = 'bottom')

# p <- ggarrange(pA, pB, labels = "AUTO", common.legend = T, legend = "bottom",
#                        font.label = list(size = 60, color = "black", family = "times"))

# p <-
#   plot_grid(
#     pA + theme(legend.position = 'bottom',legend.spacing.x = unit(0.1, 'cm')),
#     pB + theme(legend.position = 'bottom'),
#     labels = "AUTO",
#     label_size = 60,
#     label_fontfamily = "times"
#   )

# Save the figure into "figs" folder
ggsave(
  filename = here::here("figs", "gene_fig.tiff"),
  plot = p,
  width = 9,   # default: inches
  height = 6,
  units = "in",
  dpi = 500
)

showtext_auto(FALSE)

# note: in order to save this figure as ".tiff" file, we need to set the font size very big.
```

